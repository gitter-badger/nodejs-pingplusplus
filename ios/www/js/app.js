// Generated by CoffeeScript 1.8.0
var bumblebee, glo_debug, glo_domain, glo_hub_domain, glo_version;

glo_debug = false;

glo_domain = glo_debug ? "http://localhost:53696/" : "http://182.254.216.91:108/";

glo_hub_domain = glo_debug ? "http://localhost:53075/" : "http://182.254.216.91:2352/";

glo_version = "1";

bumblebee = angular.module("bumblebee", ["ionic"]).run(function($ionicPlatform) {
  $ionicPlatform.ready(function() {
    if (window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      cordova.plugins.Keyboard.disableScroll(true);
    }
    if (window.StatusBar) {
      StatusBar.styleDefault();
    }
  });
  AV.initialize("5pr5he11yp8lxamdcap4g74kqzmv50cgmw44ovfh3evj7l75", "qzeqav2znb1vbch637lurxzgs7uefk5gndkrxjf0cp48u258");
});

bumblebee.factory("$localstorage", [
  "$window", function($window) {
    return {
      set: function(key, value) {
        $window.localStorage[key] = value;
      },
      get: function(key, defaultValue) {
        return $window.localStorage[key] || defaultValue;
      },
      setObject: function(key, value) {
        $window.localStorage[key] = JSON.stringify(value);
      },
      getObject: function(key) {
        return JSON.parse($window.localStorage[key] || "{}");
      },
      getArray: function(key) {
        return JSON.parse($window.localStorage[key] || "[]");
      }
    };
  }
]);

bumblebee.factory('customHttpInterceptor', function($q, $localstorage, $location) {
  return {
    request: function(config) {
      var user;
      config.headers["Accept"] += "; version=" + glo_version;
      user = $localstorage.getObject('user');
      if (user.id) {
        config.headers['Authorization'] = "Token " + user.rememberToken;
      }
      return config || $q.when(config);
    },
    responseError: function(rejection) {
      switch (rejection.status) {
        case 401:
          if ($location.path() !== "/login") {
            $location.path("/login");
          }
          break;
        case 403:
          alert("无访问权限");
          break;
        case 429:
          alert("请求频率过高");
          break;
        default:
          if (glo_debug) {
            alert(JSON.stringify(rejection));
          } else {
            alert("网络不给力！");
          }
      }
      return $q.reject(rejection);
    }
  };
});

bumblebee.config([
  "$stateProvider", "$httpProvider", "$urlRouterProvider", function($stateProvider, $httpProvider, $urlRouterProvider) {
    $httpProvider.interceptors.push("customHttpInterceptor");
    $stateProvider.state("login", {
      url: "/login",
      templateUrl: "templates/login.html",
      controller: "LoginCtrl"
    }).state("register", {
      url: "/register",
      templateUrl: "templates/register.html",
      controller: "RegisterCtrl"
    });
    $stateProvider.state("app", {
      url: "/app",
      abstract: true,
      templateUrl: "templates/menu.html",
      controller: "AppCtrl"
    });
    $stateProvider.state("app.home", {
      url: "/home",
      views: {
        menuContent: {
          templateUrl: "templates/home.html",
          controller: 'HomeCtrl'
        }
      }
    });
    $stateProvider.state("app.transes", {
      url: "/transes",
      views: {
        menuContent: {
          templateUrl: "templates/transes.html",
          controller: "TransesCtrl"
        }
      }
    }).state("app.main.trans", {
      url: "/trans/:id",
      views: {
        menuContent: {
          templateUrl: "templates/trans.html",
          controller: "TransCtrl"
        }
      },
      resolve: {
        transaction: function($stateParams, TransService) {
          return TransService.get($stateParams.id);
        }
      }
    });
    $stateProvider.state("app.me", {
      url: "/me",
      views: {
        menuContent: {
          templateUrl: "templates/me.html",
          controller: "MeCtrl"
        }
      }
    }).state("app.change-password", {
      url: "/change-password",
      views: {
        menuContent: {
          templateUrl: "templates/change-password.html",
          controller: "ChangePasswordCtrl"
        }
      }
    }).state("app.change-nickName", {
      url: "/change-nickName",
      views: {
        menuContent: {
          templateUrl: "templates/change-nickName.html",
          controller: "ChangeNickNameCtrl"
        }
      }
    }).state("app.change-phone", {
      url: "/change-phone",
      views: {
        menuContent: {
          templateUrl: "templates/change-phone.html",
          controller: "ChangePhoneCtrl"
        }
      }
    });
    $stateProvider.state("app.common", {
      url: "/common",
      views: {
        menuContent: {
          templateUrl: "templates/common.html",
          controller: "CommonCtrl"
        }
      }
    });
    $stateProvider.state("app.favor", {
      url: "/favor",
      views: {
        menuContent: {
          templateUrl: "templates/favor.html",
          controller: "FavorCtrl"
        }
      }
    });
    $stateProvider.state("app.feedback", {
      url: "/feedback",
      views: {
        menuContent: {
          templateUrl: "templates/feedback.html",
          controller: "FavorCtrl"
        }
      }
    });
    $urlRouterProvider.otherwise("/app/home");
  }
]);

bumblebee.controller("AppCtrl", function($scope, $stateParams, $location, $http, $localstorage, $ionicScrollDelegate, $timeout) {
  var scrollBottom;
  $http.get(glo_domain + "users/validation");
  $scope.user = $localstorage.getObject('user');
  scrollBottom = function() {
    $ionicScrollDelegate.resize();
    return $timeout(function() {
      return $ionicScrollDelegate.scrollBottom(true);
    }, 1);
  };
  window.addEventListener('native.keyboardshow', function(e) {
    var footer;
    footer = $("footer.bar-footer");
    if (footer.css("bottom") === e.keyboardHeight + "px") {
      return;
    }
    footer.css("bottom", e.keyboardHeight);
    $("ion-content.dialog-box").css("bottom", e.keyboardHeight);
    return scrollBottom();
  });
  return window.addEventListener('native.keyboardhide', function() {
    var footer;
    footer = $("footer.bar-footer");
    if (footer.css("bottom") === "0px") {
      return;
    }
    footer.css("bottom", 0);
    $("ion-content.dialog-box").css("bottom", 0);
    return scrollBottom();
  });
});

$.notify.defaults({
  style: 'bootstrap',
  globalPosition: 'top right',
  autoHideDelay: 5000
});

//# sourceMappingURL=app.js.map
